const Router = require('koa-router')
const rp = require('request-promise')
const router = new Router()
const fs = require("fs")
const md5 = require("md5")
const cheerio = require('cheerio');
const superagent = require('superagent');
const binaryParser = require('superagent-binary-parser');
const wxopen = require('../conf/wxopen');
const client = require("../conf/redisconf")
const moment = require('moment')
const mineType = require("mime-types");


const nowHost = "http://127.0.0.1:6060"

router.post('/wxtest/host', async (ctx, next) => {

    let host = ctx.request.body.host
    let number = ctx.request.body.number
    let passwd = ctx.request.body.passwd

    console.log(ctx.request.body)

    if(!host || !number || !passwd) {
        return ctx.body = {code:-1,msg:"域名参数无效"}
    }

    let reg = /^(?=^.{3,255}$)[a-zA-Z0-9][-a-zA-Z0-9]{0,62}(\.[a-zA-Z0-9][-a-zA-Z0-9]{0,62})+$/;

    if(!host || !reg.test(host)) return ctx.body = {code:-1,msg:"域名参数无效"}

    let t = new Date().getTime().toString()
    let m = md5(t)
    let k = m.slice(2,7) + "." + host;
    let sns_domain = host

    let data = {
        number:number,
        passwd:passwd,
        white_ip:"43.228.64.20",
        white_acct:"gh_259ece8aeebd",
        sns_domain:sns_domain
    }

    try{

        let href = nowHost + "/wxopen/check"
        const option = {
            url:href,
            method:"POST",
            json: true,
            headers: {"content-type": "application/json"},
            body:data
        }

        let body = await rp(option)
        console.log(body)
        let dt = body.base_resp
        if(dt.ret == 1053) {
             ctx.body = {code:1,msg:"高危域名，已禁封"}
        } else {
             ctx.body = {code:0,msg:"域名正常"}
        }
    } catch (e) {
        console.log("-----测试创建生成报错--------")
        ctx.body = {code:-2,msg:"检测失败"}
    }



})


router.post("/wxopen/login",async (ctx,next)=>{

    let acount = ctx.request.body["number"]
    let pass = ctx.request.body["passwd"]
    pass = md5(pass)

    if(!acount || !pass) return ctx.body = {code:-777,msg:"权限受限"}

    let red_tk = acount.split("@")[0]+"_token"
    let red_ck = acount.split("@")[0]

    let ck = await client.getAsync(red_ck);
    let tk = await client.getAsync(red_tk);


    if(ck || tk) {
        console.log("----login----已存在-------")
        return ctx.body = {code:0,msg:"登录成功",cookie:ck,token:tk}
    }

    const lg_dt = {
        account: acount,
        passwd: pass,
        token: '',
        lang:"zh_CN",
        f:"json",
        ajax:1,
        key:1
    }

    try {
        let ress = await superagent.get(wxopen.index).set(wxopen.browserIndex)
        let ck = wxopen.createCookie(ress)
        let ck1 = ck + "__CURRENT_TOKEN__="
        let rehref = wxopen.index
        let browserMsg = wxopen.browserBase(ck1,rehref)
        let res = await superagent.post(wxopen.login).set(browserMsg).send(lg_dt)
        console.log("-----wx登录结果-----")
        console.log(res.body)
        let resp = res.body["base_resp"]
        if(resp.ret == 0){
            console.log("---------登录成功----------")
            let ck2 = wxopen.createCookie(res)
            let two = ck + ck2 + "__CURRENT_TOKEN__=" + resp.token;

            await client.setAsync(red_tk, resp.token , 'EX',2*60*60);
            await client.setAsync(red_ck, two, 'EX',2*60*60);

            console.log("---------123----------")
            ctx.body = {code:0,msg:"登录成功",cookie:two,token:resp.token}
        } else {
            console.log("---------登录失败----------")
            ctx.body = {code:1,msg:"登录失败"}
        }

    } catch (e) {
        console.log("---------报错1----------")
        console.log(e)
        ctx.body = {code:-1,msg:e}
    }
})





router.post("/wxopen/getlist",async (ctx,next)=>{


    let acount = ctx.request.body["number"]
    let pass = ctx.request.body["passwd"]
    let name = ctx.request.body["name"]

    if(!acount || !pass) return ctx.body = {code:-777,msg:"权限受限"}

    let red_tk = acount.split("@")[0]+"_token"
    let red_ck = acount.split("@")[0]
    let ck = await client.getAsync(red_ck);
    let tk = await client.getAsync(red_tk);

    console.log("---------ck---------")
    console.log(ck)
    console.log("---------tk---------")
    console.log(tk)

    try {

        if(!ck || !tk) {

            console.log("----getlist----不存在-------")

            let href6 = nowHost + "/wxopen/login"
            const option6 = {
                url:href6,
                method:"POST",
                json:true,
                headers:{"content-type": "application/json"},
                body:{number:acount,passwd:pass}
            }

            let bk = await rp(option6)
            if(bk.code !=0 ){
                return ctx.body = {code:-1,msg:"登录失败!"}
            } else {
                ck = bk.cookie
                tk = bk.token
            }
        }


        let res = await superagent.get(wxopen.list(tk)).set(wxopen.browserCookie(ck))
        let $ = cheerio.load(res.text, {decodeEntites: false});
        let t = $('html').find('script[type="text/javascript"]');
        let t1 = t.nextAll();
        let list = []
        t1.each(function(i, elem) {
            list.push($(this).html())
        });


        let num = list.length - 2;
        let document = {title:""}
        let a = list[num].toString().replace(/\ +/g,"").replace(/[\r\n]/g,"");
        let b = a.split("微信开放平台\";")[1].split("RetData=")[1].split(";wx.has_main_admin")[0]
        let c = b.split("plugins:")[1]
        let d = c.slice(0,c.length -1)
        let ok = JSON.parse(d)

        console.log("-----wx获取ID结果-----")
        console.log(ok.component)

        let list2 = ok.component;
        let appid = '';

        for (let k in list2){
            if(list2[k].name == name){
                appid = list2[k].appid
            }
        }
        if(appid) {
            ctx.body = {code: 0, appid: appid}
        } else {
            ctx.body = {code: -1, appid: appid}
        }

    } catch (e) {
        console.log(e)
        ctx.body = {code:-1}
    }

})




router.post("/wxopen/getone",async (ctx,next)=>{


    let acount = ctx.request.body["number"]
    let pass = ctx.request.body["passwd"]
    let appid = ctx.request.body["appid"]

    if(!acount || !pass) return ctx.body = {code:-777,msg:"权限受限"}

    let red_tk = acount.split("@")[0]+"_token"
    let red_ck = acount.split("@")[0]
    let ck = await client.getAsync(red_ck);
    let tk = await client.getAsync(red_tk);

    console.log("---------ck---------")
    console.log(ck)
    console.log("---------tk---------")
    console.log(tk)

    try {

        if(!ck || !tk) {

            console.log("----getlist----不存在-------")

            let href6 = nowHost + "/wxopen/login"
            const option6 = {
                url:href6,
                method:"POST",
                json:true,
                headers:{"content-type": "application/json"},
                body:{number:acount,passwd:pass}
            }

            let bk = await rp(option6)
            if(bk.code !=0 ){
                return ctx.body = {code:-1,msg:"登录失败!"}
            } else {
                ck = bk.cookie
                tk = bk.token
            }
        }


        let res = await superagent.get(wxopen.modify(tk,appid)).set(wxopen.browserCookie(ck))
        let $ = cheerio.load(res.text, {decodeEntites: false});
        let list = []
        $('.frm_tips').each(function(i, elem) {
            if($(this).text()) {
                list.push($(this).text().replace(/\ +/g, "").replace(/[\r\n]/g, ""))
            }
        });
        let num = 9;
        let a = list[num].split("并确保可以访问该文件。")[1]
        console.log("-----wx获取ID结果-----")
        console.log(a)
        ctx.body = {code:0,content: a};
    } catch (e) {
        console.log(e)
        ctx.body = {code:-1}
    }

})



router.post("/wxopen/create", async (ctx,next)=>{


    let acount = ctx.request.body["number"]
    let pass = ctx.request.body["passwd"]

    if(!acount || !pass) return ctx.body = {code:-777,msg:"权限受限"}

    let white_ip = ctx.request.body["white_ip"]
    let white_acct = ctx.request.body["white_acct"]
    let sns_domain = ctx.request.body["sns_domain"]

    let red_tk = acount.split("@")[0]+"_token"
    let red_ck = acount.split("@")[0]
    let ck = await client.getAsync(red_ck);
    let tk = await client.getAsync(red_tk);

    if(!ck || !tk) {

        console.log("----create----不存在-------")

        let href6 = nowHost + "/wxopen/login"
        const option6 = {
            url:href6,
            method:"POST",
            json:true,
            headers:{"content-type": "application/json"},
            body:{number:acount,passwd:pass}
        }

        try {

            let bk = await rp(option6)
            console.log(bk)

            if (bk.code != 0) {
                console.log("-----option6--登录失败-----")
                ctx.body = {code: -1, msg: "登录失败!"}
            } else {
                ck = bk.cookie
                tk = bk.token
            }
        } catch (e) {
            console.log("-----option6--报错了-----")
            ctx.body = {code: -1, msg: "登录失败!"}
        }
    }

    let tip = "应用" + new Date().getTime() + "|" + moment().format('YYYY-MM-DD-HH:mm:ss')

    let s_data = {
        name:tip,
        desc:"平台简介将显示在平台详情页",
        official_site:"gg.wu699.cn",
        icon_url:"http://mmbiz.qpic.cn/mmbiz_png/3BxK9mxsIg7cXcQme7ic9u2vicFFx594gGZnnBajpwOeqAouBSqrklbk5aiap69DagiafRwvpzuTLzW3rfgCj46CqQ/0?wx_fmt=png",
        auth_token:"b306fd2eab8e356399777ab7fad4dcbd",
        auth_domain:"gg.wu699.cn",
        ticket_url:"http://gg.wu699.cn/wechat/getdata",
        msg_url:"http://gg.wu699.cn/wechat/$APPID$/callback",
        white_ip:white_ip,
        white_acct:white_acct,
        category_list:"1;15;4;2;3",
        symmetric_key:"b306fd2eab8e356399777ab7fad4dcbd8s5d4foriey",
        sns_domain:sns_domain,
    }
    let data = s_data
    data.wxa_server_domain = "";
    data.jump_h5_domain = "";
    data.tag_id_list = "2003;2004;2005;2006";
    data.enter_url = "http://undefined";
    data.token = tk;
    data.lang = "zh_CN";
    data.f = "json";
    data.ajax = 1;
    data.action = "create";
    data.key = "create";

    let rehref = wxopen.create(tk)
    let browserMsg = wxopen.browserBase(ck,rehref)

    console.log("-----创建的内容-start--")
    console.log(data)
    console.log("-----创建的内容--end----")

    try {
        let res = await superagent.post(wxopen.component_acct()).set(browserMsg).send(data)
        console.log("-----wx创建应用结果-----")
        console.log(res.body)
        let resp = res.body["base_resp"]
        if (res.body.err_code == 0) {
            console.log("---------创建成功----------")

            let href6 = nowHost + "/wxopen/getlist";
            const option6 = {
                url:href6,
                method:"POST",
                json:true,
                headers:{"content-type": "application/json"},
                body:{number:acount,passwd:pass,name:tip}
            }

            let lk = await rp(option6)
            console.log("---------返回appid成功----------")
            console.log(lk)

            if(lk.code !=0 ){
                s_data.appid = ""
                ctx.body = {code:-1,msg:"获取appid失败",data:s_data}
            } else {
                s_data.appid = lk.appid
                ctx.body = {code:0,msg:"创建成功",data:s_data}
            }
        } else {
            console.log("---------创建失败----------")
            ctx.body = {code:-2,msg:res.body}
        }
    } catch (e) {
        console.log("--------这里获取报错了--------")
        ctx.body = {code:-2, msg:e}
    }
})


router.post("/wxopen/modify", async (ctx,next)=>{


    let acount = ctx.request.body["number"]
    let pass = ctx.request.body["passwd"]

    if(!acount || !pass) return ctx.body = {code:-777,msg:"权限受限"}

    let name = ctx.request.body["name"]
    let appid = ctx.request.body["appid"]
    let white_ip = ctx.request.body["white_ip"]
    let white_acct = ctx.request.body["white_acct"]
    let sns_domain = ctx.request.body["sns_domain"]


    let red_tk = acount.split("@")[0]+"_token"
    let red_ck = acount.split("@")[0]
    let ck = await client.getAsync(red_ck);
    let tk = await client.getAsync(red_tk);

    if(!ck || !tk) {

        let href6 = nowHost + "/wxopen/login"
        const option6 = {
            url:href6,
            method:"POST",
            json:true,
            headers:{"content-type": "application/json"},
            body:{number:acount,passwd:pass}
        }

        let bk = await rp(option6)
        if(bk.code !=0 ){
            return ctx.body = {code:-1,msg:"登录失败!"}
        } else {
            ck = bk.cookie
            tk = bk.token
        }
    }


    let data = {
        appid:appid,
        name:name,
        desc:"平台简介将显示在平台详情页",
        official_site:"gg.wu699.cn",
        icon_url:"http://mmbiz.qpic.cn/mmbiz_png/3BxK9mxsIg7cXcQme7ic9u2vicFFx594gGZnnBajpwOeqAouBSqrklbk5aiap69DagiafRwvpzuTLzW3rfgCj46CqQ/0?wx_fmt=png",
        auth_token:"b306fd2eab8e356399777ab7fad4dcbd",
        auth_domain:"gg.wu699.cn",
        ticket_url:"http://gg.wu699.cn/wechat/getdata",
        msg_url:"http://gg.wu699.cn/wechat/$APPID$/callback",
        white_ip:white_ip,
        white_acct:white_acct,
        category_list:"1;15;4;2;3",
        symmetric_key:"b306fd2eab8e356399777ab7fad4dcbd8s5d4foriey",
        sns_domain:sns_domain,
        tag_id_list: "2003;2004;2005;2006",
        token:tk,
        enter_url:"http://undefined",
        wxa_server_domain:"",
        jump_h5_domain:"",
        lang:"zh_CN",
        f:"json",
        ajax:1,
        action:"modify",
        key:"modify",
    }


    let rehref = wxopen.modify(tk,appid)
    let browserMsg = wxopen.browserBase(ck,rehref)

    try {
        let res = await superagent.post(wxopen.component_acct()).set(browserMsg).send(data)
        console.log("---------修改返回----------")
        console.log(res.body)
        let resp = res.body["base_resp"]
        if (res.body.err_code == 0) {
            console.log("---------修改成功----------")
            ctx.body = {code:0,msg:"修改成功"}
        } else {
            console.log("---------修改失败----------")
            ctx.body ={code:1,msg:res.body}
        }
    } catch (e) {
        console.log("---------修改失败--123--------")
        ctx.body ={code:-1,msg:e}
    }
})


router.post("/wxopen/direct_modify", async (ctx,next)=>{


    let acount = ctx.request.body["number"]
    let pass = ctx.request.body["passwd"]

    if(!acount || !pass) return ctx.body = {code:-777,msg:"权限受限"}

    let appid = ctx.request.body["appid"]
    let white_ip = ctx.request.body["white_ip"]
    let white_acct = ctx.request.body["white_acct"]


    let red_tk = acount.split("@")[0]+"_token"
    let red_ck = acount.split("@")[0]
    let ck = await client.getAsync(red_ck);
    let tk = await client.getAsync(red_tk);

    if(!ck || !tk) {

        let href6 = nowHost + "/wxopen/login"
        const option6 = {
            url:href6,
            method:"POST",
            json:true,
            headers:{"content-type": "application/json"},
            body:{number:acount,passwd:pass}
        }

        let bk = await rp(option6)
        if(bk.code !=0 ){
            return ctx.body = {code:-1,msg:"登录失败!"}
        } else {
            ck = bk.cookie
            tk = bk.token
        }
    }


    let data = {
        white_ip:white_ip,
        white_acct:white_acct,
        token:tk,
        action:"direct_modify"
    }


    let rehref = wxopen.direct_modify(tk,appid)
    let browserMsg = wxopen.browserBase(ck,rehref)

    try {
        let res = await superagent.post(rehref).set(browserMsg).send(data)
        console.log("---------修改返回----------")
        console.log(res.body)
        let resp = res.body["base_resp"]
        if (res.body.err_code == 0) {
            console.log("---------修改成功----------")
            ctx.body = {code:0,msg:"修改成功"}
        } else {
            console.log("---------修改失败----------")
            ctx.body ={code:1,msg:res.body}
        }
    } catch (e) {
        console.log("---------修改失败--123--------")
        ctx.body ={code:-1,msg:e}
    }
})


router.post("/wxopen/check", async (ctx,next)=>{


    let acount = ctx.request.body["number"]
    let pass = ctx.request.body["passwd"]

    if(!acount || !pass) return ctx.body = {code:-777,msg:"权限受限"}

    let sns_domain = ctx.request.body["sns_domain"]


    let red_tk = acount.split("@")[0]+"_token"
    let red_ck = acount.split("@")[0]
    let ck = await client.getAsync(red_ck);
    let tk = await client.getAsync(red_tk);

    if(!ck || !tk) {

        let href6 = nowHost + "/wxopen/login"
        const option6 = {
            url:href6,
            method:"POST",
            json:true,
            headers:{"content-type": "application/json"},
            body:{number:acount,passwd:pass}
        }

        let bk = await rp(option6)
        if(bk.code !=0 ){
            return ctx.body = {code:-1,msg:"登录失败!"}
        } else {
            ck = bk.cookie
            tk = bk.token
        }
    }


    let data = {
        sns_domain:sns_domain,
        token:tk,
        wxa_server_domain:"",
        jump_h5_domain:"",
        lang:"zh_CN",
        f:"json",
        ajax:1,
        action:"check_domain_by_scene",
        key:"check_domain_by_scene",
    }


    let rehref = wxopen.create(tk)
    let browserMsg = wxopen.browserBase(ck,rehref)

    try {
        let res = await superagent.post(wxopen.component_acct()).set(browserMsg).send(data)
        console.log("---------修改返回----------")
        console.log(res.body)
        ctx.body =res.body

    } catch (e) {
        console.log("---------修改失败--123--------")
        ctx.body ={code:-1,msg:e}
    }
})


router.post("/wxopen/delete", async (ctx,next) => {


    let acount = ctx.request.body["number"]
    let pass = ctx.request.body["passwd"]

    if(!acount || !pass) return ctx.body = {code:-777,msg:"权限受限"}

    let appid = ctx.request.body["appid"]

    let red_tk = acount.split("@")[0]+"_token"
    let red_ck = acount.split("@")[0]
    let ck = await client.getAsync(red_ck);
    let tk = await client.getAsync(red_tk);

    if(!ck || !tk) {

        let href6 = nowHost + "/wxopen/login"
        const option6 = {
            url:href6,
            method:"POST",
            json:true,
            headers:{"content-type": "application/json"},
            body:{number:acount,passwd:pass}
        }

        let bk = await rp(option6)
        if(bk.code !=0 ){
            return ctx.body = {code:-1,msg:"登录失败!"}
        } else {
            ck = bk.cookie
            tk = bk.token
        }
    }


    let data = {
        appid:appid,
        action:"del_component",
        token:tk,
        lang:"zh_CN",
        f:"json",
        ajax:1,
        key:1,
    }

    let rehref = wxopen.list(tk)
    let browserMsg = wxopen.browserBase(ck,rehref)

    try {
        let res = await superagent.post(wxopen.component_acct()).set(browserMsg).send(data)
        console.log("---------删除返回----------")
        console.log(res.body)
        let resp = res.body["base_resp"]
        if (resp.ret == 0) {
            console.log("---------删除成功----------")
            ctx.body = {code:0,msg:"删除成功"}
        } else {
            console.log("---------删除失败----------")
            ctx.body = {code:1,msg:res.body}
        }
    } catch (e) {
        console.log(e)
        ctx.body = {code:-1,msg:res.body}
    }
})


router.post("/wxopen/gettxt", async (ctx,next)=> {


    let acount = ctx.request.body["number"]
    let pass = ctx.request.body["passwd"]
    let public_ip = ctx.request.body["public_ip"]
    if(public_ip) public_ip = public_ip.replace(/(^[\s]+)|([\s]+$)/g, '')

    if(!acount || !pass) return ctx.body = {code:-777,msg:"权限受限"}

    let appid = ctx.request.body["appid"]

    let red_tk = acount.split("@")[0]+"_token"
    let red_ck = acount.split("@")[0]
    let ck = await client.getAsync(red_ck);
    let tk = await client.getAsync(red_tk);

    if(!ck || !tk) {

        let href6 = nowHost + "/wxopen/login"
        const option6 = {
            url:href6,
            method:"POST",
            json:true,
            headers:{"content-type": "application/json"},
            body:{number:acount,passwd:pass}
        }

        let bk = await rp(option6)
        if(bk.code !=0 ){
            return ctx.body = {code:-1,msg:"登录失败!"}
        } else {
            ck = bk.cookie
            tk = bk.token
        }
    }

    let rehref = wxopen.index
    let browserMsg = wxopen.browserBase(ck,rehref)

    try {
        let res = await superagent.get(wxopen.downloadTxt(tk)).set(browserMsg)
        console.log('--------获取txt文件返回值-------')
        console.log(res.text)
        let resp = res.text
        if (resp.length > 0) {
            let name = res.headers["content-disposition"].split("filename=")[1]

            let href = "http://"+public_ip+":5050/addText"
            const option = {
                url: href,
                method: "POST",
                json: true,
                headers: {"content-type": "application/json"},
                body: {name: name, content: resp}
            }

            let ps = await rp(option)

            if(ps.code == 0) {
                console.log("---------获取并保存成功----------")
                ctx.body = {code:0,mgs:"获取并保存成功"}
            } else {
                console.log("---------保存失败---------")
                ctx.body = {code:1,mgs:"保存失败"}
            }
        }else{
            console.log("---------获取失败----------")
            ctx.body = {code:2,mgs:"获取失败"}
        }

    } catch (e) {
        console.log("-------------获取txt报错123-------------")
        ctx.body = {code:-1,mgs:e}
    }
})

router.post("/wxopen/qrcode",async (ctx,next)=>{


    let acount = ctx.request.body["number"]
    let pass = ctx.request.body["passwd"]

    if(!acount || !pass) return ctx.body = {code:-777,msg:"权限受限"}

    let appid = ctx.request.body["appid"]

    let red_tk = acount.split("@")[0]+"_token"
    let red_ck = acount.split("@")[0]
    let ck = await client.getAsync(red_ck);
    let tk = await client.getAsync(red_tk);

    if(!ck || !tk) {

        let href6 = nowHost + "/wxopen/login"
        const option6 = {
            url:href6,
            method:"POST",
            json:true,
            headers:{"content-type": "application/json"},
            body:{number:acount,passwd:pass}
        }

        let bk = await rp(option6)
        if(bk.code !=0 ){
            return ctx.body = {code:-1,msg:"登录失败!"}
        } else {
            ck = bk.cookie
            tk = bk.token
        }
    }


    let rehref = wxopen.doSecret(tk,appid)
    let browserMsg = wxopen.browserBase(ck,rehref)

    let data = {
        action:"get",
        typeid:1,
        appid:appid,
        token:tk,
        f:"json",
        key:"get",
        size:120,
        scene:10
    }

    try {
        let res = await superagent.post(wxopen.authqr()).set(browserMsg).send(data)
        let resp = res.body["base_resp"]
        if (resp.ret == 0) {
            console.log("---------获取成功----------")
            let ticket = res.body.qrcheck_ticket
            console.log("ticket="+ticket)

            let red_ticket = appid + "_ticket"
            await client.setAsync(red_ticket, ticket , 'EX',30*60);

            let qr = await superagent.get(wxopen.qrcode(tk,ticket)).set(browserMsg).parse(binaryParser).buffer()
            // let name = appid + ".jpg"
            // let outFile = "/www/adminApp/public/qr/" + name;
            if(qr.body){
                let bufferData = Buffer.from(qr.body).toString("base64");
                let base64 = "data:image/png;base64," + bufferData;
                ctx.body = { code:0,img:base64,msg:"获取成功"}
            }else{
                ctx.body = { code:1,img:'',msg:"获取失败"}
            }

        } else {
            console.log("---------获取失败1----------")
            ctx.body = { code:1,img:'',msg:res.body}
        }
    } catch (e) {
        console.log("---------获取失败2----------")
        console.log(e)
        ctx.body = { code:-1,img:'',msg:e}
    }
})


router.post("/wxopen/getsecret",async (ctx,next)=>{

    let acount = ctx.request.body["number"]
    let pass = ctx.request.body["passwd"]

    if(!acount || !pass) return ctx.body = {code:-777,msg:"权限受限"}

    let appid = ctx.request.body["appid"]


    let red_secrect = appid + "_secrect"
    let red_tk = acount.split("@")[0]+"_token"
    let red_ck = acount.split("@")[0]
    let red_ticket = appid + "_ticket"
    let ck = await client.getAsync(red_ck);
    let tk = await client.getAsync(red_tk);
    let sc = await client.getAsync(red_secrect);
    let ticket = await client.getAsync(red_ticket);

    if(sc) {
        return  {code:0,secret:sc}
    }

    if(!ck || !tk) {

        let href6 = nowHost + "/wxopen/login"
        const option6 = {
            url:href6,
            method:"POST",
            json:true,
            headers:{"content-type": "application/json"},
            body:{number:acount,passwd:pass}
        }

        let bk = await rp(option6)
        if(bk.code !=0 ){
            return ctx.body = {code:-1,msg:"登录失败!"}
        } else {
            ck = bk.cookie
            tk = bk.token
        }
    }


    let rehref = wxopen.doSecret(tk,appid)
    let browserMsg = wxopen.browserBase(ck,rehref)

    let data = {
        appid:appid,
        qr_ticket:ticket,
        action:"open_refresh_secretkey",
        token: tk
    }

    try {
        let res = await superagent.post(wxopen.secret()).set(browserMsg).send(data)
        console.log("---------获取secrect返回----------------")
        console.log(res.body)
        let resp = res.body["base_resp"]
        if (resp.ret == 0) {
            await client.setAsync(red_secrect, res.body.secret , 'EX',12*60*60);
            ctx.body = {code:0,secret:res.body.secret,msg:"获取成功"}
        } else {
            console.log("---------获取失败----------")
            ctx.body = {code:1,msg:"获取失败"}
        }
    } catch (e) {
        console.log("---------获取失败--123-----------------------")
        ctx.body = {code:-1,msg:"获取失败"}
    }
})


//------全局model---------
module.exports = router



