Vue.component("orderlist",{
  template:"#order-template",
  data() {
    return {
      multipleSelection: [],
      total:0,
      currentPage:1,
      currentNum:100,
      project_id:'',
      alist:[],
      list:[],
      is_url1:false,
      is_url2:true,
      loading:false,
      formLabelWidth: '99px',
      dialogFormVisible: false,
      dialogForm2Visible: false,
      form: {
          project_id :'',
          image_url:'',
          st_id:'',
          template_content:'',
      },
      form2: {
          project_id :'',
          image_url:'',
          st_id:'',
          template_content:'',
      }
    }
  },
  created:function(){
      let page = this.currentPage
      let num = this.currentNum
      this.loading = true
      let that = this
      this.getData(page,num,function (res) {
          let dt = res.data
          that.list = dt.list
          that.total = dt.total
          that.loading = false
      })
      let href2 = window.location.href + "/getAcount"
      axios.post(href2, {all:true}).then(function (res) {
          console.log(res)
          let dt = res.data
          if(dt.code == 0) {
              that.alist = dt.list
          } else {
              that.$message({
                  message: '获取失败',
                  type: 'warning'
              });
          }
      }).catch(function (e) {
          that.$message({
              message: '获取失败',
              type: 'warning'
          });
      })
  },
  watch:{
      is_url1:function(){
          let c1 = document.querySelector("#ch_1")
          let c2 = document.querySelector("#ch_2")
          let v = this.is_url1
          if(v){
              c1.style = "display:block"
              c2.style = "display:none"
              console.log("if=" + v)
          } else {
              c1.style = "display:none"
              c2.style = "display:block"
              console.log("else=" + v)
          }
      }
  },
  methods: {
    toggleSelection: function (rows) {
      if (rows) {
        rows.forEach(row => {
          this.$refs.multipleTable.toggleRowSelection(row);
        });
      } else {
        this.$refs.multipleTable.clearSelection();
      }
    },
    chgUse:function(d){
        let that = this
        this.loading = true

        let href = window.location.href.split("?")[0] + "/doUse"
        axios.post(href,d).then(function (res) {
            let dt = res.data
            that.loading = false
            if(dt.code == 0) {
                that.$message({
                    message: '修改状态成功',
                    type: 'success'
                });

                window.location.reload()
            } else {
                that.$message({
                    message: '修改状态失败',
                    type: 'warning'
                });
            }

        }).catch(function (e) {
            that.loading = false
            that.$message({
                message: '修改状态失败',
                type: 'warning'
            });
        })
    },
    chgType:function(v){
        let that = this
        that.loading = true
        let href = window.location.href
        let page = this.currentPage
        let num = this.currentNum
        let project_id = this.project_id
        axios.post(href, {
            page: page,
            num: num,
            project_id:project_id
        }).then(function (res) {
            let dt = res.data
            that.list = dt.list
            that.total = dt.total
            that.loading = false
        }).catch(function (e) {
            that.loading = false
            that.$message({
                message: '获取失败',
                type: 'warning'
            });
        })
    },
    handleSelectionChange: function (val) {
      console.log(val)
      this.multipleSelection = val;
    },
    handleOrder: function (val) {
      console.log("filed=", val.prop)
      console.log("type=", val.order)


      this.loading = true
      setTimeout(() => {
        this.loading = false;
      }, 2000);
    },
    setStyle:function(d,n){
        if(d){
           if(d==1) return "display:block"
           if(d==2) return "display:none"
        }else{
            if(d==1) return "display:none"
            if(d==2) return "display:block"
        }
    },
    handleSizeChange(val) {
      console.log(`每页 ${val} 条`);
      this.currentNum = val
      this.loading = true
      let page = this.currentPage
      let that = this

      this.getData(page, val, function (res) {
        let dt = res.data
          that.list = dt.list
          that.total = dt.total
          that.loading = false
      })

    },
    handleCurrentChange(val) {
      console.log(`当前页: ${val}`);
      this.currentPage = val
      this.loading = true
      let num = this.currentNum
      let that = this

      this.getData(val, num, function (res) {
        let dt = res.data
          that.list = dt.list
          that.total = dt.total
          that.loading = false
      })
    },
    getData: function (page, num, callback) {
      let that = this
      let href = window.location.href
      axios.post(href, {
        page: page,
        num: num,
      }).then(function (res) {
        console.log(res)
        callback(res)
      }).catch(function (e) {
          that.loading = false
          that.$message({
              message: '操作失败',
              type: 'warning'
          });
      })
    },
    getUrl:function(d){
        let href = window.location.href.split("acount")[0] + "order/" + d.id + "?acount=" + d.number;
        window.location.href = href
    },
    formatDate:function (tm) {
      let dt = moment(tm).format("YYYY-MM-DD HH:mm:ss")
      return dt
    },
    formatMoney:function (m) {
      let my = parseFloat(m/100).toFixed(2)
      return my
    },
    formatBool:function (s) {
      let m = s ? "是" : "否"
      return m
    },
    goAuth: function (id) {
        let that = this
        let href = window.location.href.split("?")[0] + "/doHref"
        axios.post(href, {appid:id}).then(function (res) {
            console.log(res)
            let dt = res.data

            that.$alert('获取授权成功', '', {
                confirmButtonText: '前往授权',
                center: true,
                callback: action => {
                    if(action=="confirm") {
                        window.open(dt.url)
                    }
                }
            });

        }).catch(function (e) {
            that.$message({
                type: 'info',
                message: '获取授权失败'
            });
        })
    },
    postDate:function (d) {
        let that = this
        this.loading = true

        let href = window.location.href.split("?")[0] + "/doApp"
        axios.post(href,d).then(function (res) {
            let dt = res.data
            that.loading = false
            that.dialogFormVisible = false
            if(dt.code == 0) {
                that.$message({
                    message: '新建背景成功',
                    type: 'success'
                });

                window.location.reload()
            } else {
                that.$message({
                    message: '新建背景失败',
                    type: 'warning'
                });
            }

        }).catch(function (e) {
            that.loading = false
            that.dialogFormVisible = false
            that.$message({
                message: '新建背景失败',
                type: 'warning'
            });
        })
    },
    chgStatu: function (id) {
        let that = this
        this.loading = true
        let href = window.location.href.split("?")[0] + "/chgstatu"
        axios.post(href,{appid:id}).then(function (res) {
            let dt = res.data
            that.loading = false
            that.$message({
                message: '应用已禁用',
                type: 'success'
            });
            window.location.reload()
        }).catch(function (e) {
            that.loading = false
            that.$message({
                message: '操作失败',
                type: 'warning'
            });
        })
    },
    done:function(){
        let that = this
        this.form.project_id = '';
        this.form.image_url = ''
        this.form.st_id = ''
        this.form.template_content = ''
        this.dialogFormVisible = true
    },
    chgAcc:function (d) {
        let that = this
        this.form.project_id = d.project_id;
        this.form.image_url = d.image_url
        this.form.st_id = d.id
        this.form.template_content = d.template_content
        this.dialogForm2Visible = true
    },
    delAcc:function (d) {
        let that = this
        this.$confirm('此操作将永久删除该应用, 是否继续?', '提示', {
            confirmButtonText: '确定',
            cancelButtonText: '取消',
            type: 'warning',
            callback: action => {
                if (action == "confirm") {
                    that.loading = true
                    let href = window.location.href.split("?")[0] + "/delData"
                    axios.post(href,{st_id:d.id}).then(function (res) {
                        let dt = res.data
                        that.loading = false
                        if(dt.code == 0) {
                            that.$message({
                                message: '删除成功',
                                type: 'success'
                            });
                            window.location.reload()
                        } else {
                            that.$message({
                                message: '删除失败',
                                type: 'warning'
                            });
                        }
                    }).catch(function (e) {
                        that.loading = false
                        that.$message({
                            message: '删除失败',
                            type: 'warning'
                        })
                    })
                }
            }
        })
    },
    chgDate:function (d) {
        let that = this
        this.loading = true
        let href = window.location.href.split("?")[0] + "/chgData"
        axios.post(href,d).then(function (res) {
            let dt = res.data
            that.dialogForm2Visible = false
            that.loading = false
            if(dt.code == 0) {
                that.$message({
                    message: '背景修改成功',
                    type: 'success'
                });
                window.location.reload()
            } else {
                that.$message({
                    message: '操作失败',
                    type: 'warning'
                });
            }
        }).catch(function (e) {
            that.loading = false
            that.$message({
                message: '操作失败',
                type: 'warning'
            })
        })
    },
    handleAvatarSuccess:function(res, file) {
      console.log(res)
      if(res.code == 0){
          this.form.image_url = res.images;
      }else {
          this.form.image_url = URL.createObjectURL(file.raw);
      }
    },
    beforeAvatarUpload:function(file) {
      const isJPG = file.type === 'image/jpeg' || file.type === 'image/png' ;
      const isLt2M = file.size / 1024 / 1024 < 2;

      if (!isJPG) {
          this.$message.error('上传分享图标只能是 JPG|PNG 格式!');
      }
      if (!isLt2M) {
          this.$message.error('上传分享图标大小不能超过 2MB!');
      }
      return isJPG && isLt2M;
    },
  }
})


