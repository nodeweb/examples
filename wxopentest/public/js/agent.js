Vue.component("agentlist",{
  template:"#agent-template",
  data() {
    return {
      multipleSelection: [],
      whitelist:['bceapp.com','myqcloud.com','netlify.com'],
      rowList:[],
      total:0,
      is_survive:'',
      currentPage:1,
      currentNum:100,
      list:[],
      acount:[],
      loading:false,
      formLabelWidth: '50px',
      formLabel3Width: '100px',
      dialogFormVisible: false,
      dialogForm3Visible: false,
      dialogForm4Visible: false,
      form: {
          url_host: '',
      },
      apps:[],
      form3: {
          appid:'',
          app_name:'',
          url_host:'',
          url_type:'',
      },
      form4: {
          list:[],
          url_type: '',
          project_id:'',
      },
    }
  },
  created:function(){
    let page = this.currentPage
    let num = this.currentNum
    this.loading = true
    let that = this
    this.getData(page,num,function (res) {
      let dt = res.data
        that.list = dt.list
        that.total = dt.total
        that.loading = false
    })

    let href1 = window.location.href.split("?")[0] + '/getApp'
    axios.post(href1, {all:true}).then(function (res) {
      console.log(res)
      let dt = res.data
      that.apps = dt.list
      that.loading = false;
    }).catch(function (e) {
      that.loading = false
      console.log(e)
    })

    let href2 = "http://" + window.location.host + '/acount'
    axios.post(href2, {page: 1, num: 100}).then(function (res) {
      console.log(res)
      let dt = res.data
      that.acount = dt.list
      that.loading = false;
    }).catch(function (e) {
      that.loading = false
      console.log(e)
    })

  },
  methods: {
    setStop:function(d){
        return d.no_time.slice(d.no_time.indexOf("-")+1)
    },
    handleSelectionAll: function () {
        this.$refs.multipleTable.clearSelection();
        this.rowList = []
    },
    handleSelection: function (val, row) {
      let h = this.checkWhite(row.url_host)
      console.log("check="+h)
      if(!row.parsing_type && h<0) {
          console.log("ok="+row.url_host)
          this.multipleSelection = val;
          this.rowList = val.map(function (d) {
              return d.url_host
          });
      } else {
          console.log("no="+row.url_host)
          this.$refs.multipleTable.toggleRowSelection(row);
      }
    },
    checkWhite:function(host){
        let h = -1;
        for(let k in this.whitelist){
            let s = host.indexOf(this.whitelist[k])
            if(s>0){
                return h = 1
            }
        }
        return h;
    },
  checkSt:function(host){
      let h = -1;
      for(let k in this.whitelist){
          let s = host.indexOf(this.whitelist[k])
          if(s>0){
              return h = 1
          }
      }
      return h;
  },
    handleOrder: function (val) {
      console.log("filed=", val.prop)
      console.log("type=", val.order)


      this.loading = true
      setTimeout(() => {
        this.loading = false;
      }, 2000);
    },
    handleSizeChange(val) {
      console.log(`每页 ${val} 条`);
      this.currentNum = val
      this.loading = true
      let page = this.currentPage
      let that = this

      this.getData(page, val, function (res) {
        let dt = res.data
          that.list = dt.list
          that.total = dt.total
          that.loading = false
      })

    },
    handleCurrentChange(val) {
      console.log(`当前页: ${val}`);
      this.currentPage = val
      this.loading = true
      let num = this.currentNum
      let that = this

      this.getData(val, num, function (res) {
        let dt = res.data
          that.list = dt.list
          that.total = dt.total
          that.loading = false
      })
    },
    getType:function(v){
        let that = this
        let page = this.currentPage
        let num = this.currentNum
        this.loading = true
        let href = window.location.href
        axios.post(href, {
            page: page,
            num: num,
            is_survive:parseInt(that.is_survive)
        }).then(function (res) {
            let dt = res.data
            that.list = dt.list
            that.total = dt.total
            that.loading = false
        }).catch(function (e) {
            console.log(e)
            that.loading = false
        })
    },
    getData: function (page, num, callback) {
      let href = window.location.href
      axios.post(href, {
        page: page,
        num: num,
      }).then(function (res) {
        console.log(res)
        callback(res)
      }).catch(function (e) {
        console.log(e)
        that.loading = false
      })
    },
    formatDate:function (tm) {
      let dt = moment(tm).format("YYYY-MM-DD HH:mm:ss")
      return dt
    },
    formatMoney:function (m) {
      let my = parseFloat(m/100).toFixed(2)
      return my
    },
    formatBool:function (s) {
      let m = s ? "是" : "否"
      return m
    },
    postDate:function (d) {
        let that = this
        this.loading = true
        let all = d.url_host
        let now = all.replace(/\s{2,}/g,"\n").split("\n")
        console.log(now)
        if(!now[0] || now.length < 1) {
            that.loading = false
            that.dialogFormVisible = false
            that.$message({
                message: '新建应用失败123',
                type: 'warning'
            });
            return
        }
        let href = window.location.href.split("?")[0] + "/addHost"
        axios.post(href,{url_host:now}).then(function (res) {
            let dt = res.data
            that.loading = false
            that.dialogFormVisible = false

            let h = [
                '<div>成功添加域名'+dt.n+'个</div>',
                '<div>未添加域名'+dt.list.length+'个</div>'
            ].join('')

            let one ='';
            if(dt.list.length>0){
               for(var k in dt.list){
                   one = one + '<div>'+dt.list[k]+'</div>'
               }
               h = h + one
            }

            that.$alert(h, '操作成功', {
                dangerouslyUseHTMLString: true,
                confirmButtonText: '确定',
                callback: action => {
                    if( dt.n > 0) {
                        window.location.reload()
                    }
                }
            })

        }).catch(function (e) {
            console.log('---失败添加---')
            console.log(e)
            that.loading = false
            that.dialogFormVisible = false
            that.$message({
                message: '新建应用失败',
                type: 'warning'
            });
        })
    },
    openBang:function (d) {
        let that = this
        that.form3.url_host = d.url_host;
        that.dialogForm3Visible = true;
    },
    chgAname: function (d) {
        console.log("change="+d)
        this.form3.appid = d.split("|")[0]
        this.form3.app_name = d.split("|")[1]
    },
    post3Date:function (d) {
        let that = this
        that.loading = true;
        let href = window.location.href.split("?")[0] + "/bangApp"
        axios.post(href, this.form3).then(function (res) {
            console.log(res)
            that.dialogForm3Visible = false;
            that.loading = false;
            that.$message({
                message: '绑定成功',
                type: 'success'
            });
            window.location.reload()
        }).catch(function (e) {
            that.dialogForm3Visible = false;
            that.loading = false
            console.log(e)
            that.$message({
                message: '应用绑定失败',
                type: 'warning'
            });
        })
    },
    setName: function (d) {
        if(d == "one_url"){
            return "分享页域名";
        } else if (d == 'two_url') {
            return "入口域名1";
        } else if (d == 'three_url'){
            return "入口域名2";
        } else {
            return "";
        }
    },
    delBang: function (d) {
          let that = this
          that.loading = true;
          let href = window.location.href.split("?")[0] + "/delBang"
          axios.post(href, {url_host:d.url_host}).then(function (res) {
              console.log(res)
              that.dialogForm3Visible = false;
              that.loading = false;
              that.$message({
                  message: '删除成功',
                  type: 'success'
              });
              window.location.reload()
          }).catch(function (e) {
              that.dialogForm3Visible = false;
              that.loading = false
              console.log(e)
              that.$message({
                  message: '删除失败',
                  type: 'warning'
              });
          })
      },
      post4Date: function (d) {
          let that = this
          that.loading = true;
          d.list = this.rowList
          let href = window.location.href.split("?")[0] + "/ngHost"
          axios.post(href, d).then(function (res) {
              console.log(res)
              that.dialogForm4Visible = false;
              that.loading = false;
              that.$message({
                  message: '解析成功',
                  type: 'success'
              });
              window.location.reload()
          }).catch(function (e) {
              that.dialogForm4Visible = false;
              that.loading = false
              console.log(e)
              that.$message({
                  message: '解析失败',
                  type: 'warning'
              });
          })
      },
      filterTagA:function(value, row) {
        return row.parsing_type === value;
      },
      filterTagB:function(value, row) {
          return row.appid === value;
      },
  }
})


